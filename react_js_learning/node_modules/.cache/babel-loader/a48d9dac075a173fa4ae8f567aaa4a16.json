{"ast":null,"code":"var _jsxFileName = \"/Users/ryuga/Documents/Visual Studio/GitHub/Projects/react_js_learning/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useRef, useState } from 'react';\nimport PostFilter from './components/PostFilter';\nimport PostForm from './components/PostForm'; // import Counter from './components/Counter';\n// import PostItem from './components/PostItem';\n\nimport PostList from './components/PostList';\nimport MyInput from './components/UI/input/MyInput';\nimport MySelect from './components/UI/select/MySelect';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'aa 1',\n    body: 'dd'\n  }, {\n    id: 2,\n    title: 'bb 2',\n    body: 'cc'\n  }, {\n    id: 3,\n    title: 'cc 3',\n    body: 'bb'\n  }, {\n    id: 4,\n    title: 'dd 4',\n    body: 'aa'\n  }]);\n  const [filter, setFilter] = useState();\n  const sortedPosts = useMemo(() => {\n    console.log('Get Sorted Posts');\n    if (selectedSort) return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    return posts;\n  }, [selectedSort, posts]);\n  const searchAndSortedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [searchQuery, sortedPosts]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n    console.log(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), searchAndSortedPosts.length ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: searchAndSortedPosts,\n      title: 'Posts'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Posts not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4iMyI135HsTNQZ2J7uQCuRhkY0s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ryuga/Documents/Visual Studio/GitHub/Projects/react_js_learning/src/App.js"],"names":["React","useMemo","useRef","useState","PostFilter","PostForm","PostList","MyInput","MySelect","App","posts","setPosts","id","title","body","filter","setFilter","sortedPosts","console","log","selectedSort","sort","a","b","localeCompare","searchAndSortedPosts","post","toLowerCase","includes","searchQuery","createPost","newPost","removePost","p","sortPosts","setSelectedSort","margin","length","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,kBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AAACS,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,MAAf;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GADiC,EAEjC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,MAAf;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAFiC,EAGjC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,MAAf;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAHiC,EAIjC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,MAAf;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAJiC,CAAD,CAAlC;AAOA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;AAEA,QAAMc,WAAW,GAAGhB,OAAO,CAAC,MAAM;AAChCiB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIC,YAAJ,EAAkB,OAAO,CAAC,GAAGV,KAAJ,EAAWW,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACF,YAAD,CAAD,CAAgBI,aAAhB,CAA8BD,CAAC,CAACH,YAAD,CAA/B,CAA1B,CAAP;AAClB,WAAOV,KAAP;AACD,GAJ0B,EAIxB,CAACU,YAAD,EAAeV,KAAf,CAJwB,CAA3B;AAMA,QAAMe,oBAAoB,GAAGxB,OAAO,CAAC,MAAM;AACzC,WAAOgB,WAAW,CAACF,MAAZ,CAAmBW,IAAI,IAAIA,IAAI,CAACb,KAAL,CAAWc,WAAX,GAAyBC,QAAzB,CAAkCC,WAAW,CAACF,WAAZ,EAAlC,CAA3B,CAAP;AACD,GAFmC,EAEjC,CAACE,WAAD,EAAcZ,WAAd,CAFiC,CAApC;;AAIA,QAAMa,UAAU,GAAIC,OAAD,IAAa;AAC9BpB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWqB,OAAX,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIN,IAAD,IAAU;AAC3Bf,IAAAA,QAAQ,CAACD,KAAK,CAACK,MAAN,CAAakB,CAAC,IAAIA,CAAC,CAACrB,EAAF,KAASc,IAAI,CAACd,EAAhC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMsB,SAAS,GAAIb,IAAD,IAAU;AAC1Bc,IAAAA,eAAe,CAACd,IAAD,CAAf;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAES;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGX,oBAAoB,CAACY,MAArB,gBACG,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEL,UAAlB;AAA8B,MAAA,KAAK,EAAEP,oBAArC;AAA2D,MAAA,KAAK,EAAE;AAAlE;AAAA;AAAA;AAAA;AAAA,YADH,gBAEG;AAAI,MAAA,KAAK,EAAE;AAACa,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5CQ7B,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useMemo, useRef, useState } from 'react';\nimport PostFilter from './components/PostFilter';\nimport PostForm from './components/PostForm';\n// import Counter from './components/Counter';\n// import PostItem from './components/PostItem';\nimport PostList from './components/PostList';\nimport MyInput from './components/UI/input/MyInput';\nimport MySelect from './components/UI/select/MySelect';\nimport './styles/App.css';\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    {id: 1, title: 'aa 1', body: 'dd'},\n    {id: 2, title: 'bb 2', body: 'cc'},\n    {id: 3, title: 'cc 3', body: 'bb'},\n    {id: 4, title: 'dd 4', body: 'aa'}\n  ])\n  \n  const [filter, setFilter] = useState()\n\n  const sortedPosts = useMemo(() => {\n    console.log('Get Sorted Posts');\n    if (selectedSort) return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n    return posts;\n  }, [selectedSort, posts]);\n\n  const searchAndSortedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()))\n  }, [searchQuery, sortedPosts])\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost])\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  const sortPosts = (sort) => {\n    setSelectedSort(sort);\n    console.log(sort);\n  }\n\n  return (\n    <div className='App'>\n      <PostForm create={createPost}/>\n      <hr style={{margin: '15px 0'}}/>\n      <PostFilter/>\n      {searchAndSortedPosts.length\n        ? <PostList remove={removePost} posts={searchAndSortedPosts} title={'Posts'}/>\n        : <h1 style={{textAlign: 'center'}}>Posts not found!</h1>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}